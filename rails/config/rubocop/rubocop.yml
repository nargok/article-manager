AllCops:
  Exclude:
    - "node_modules/**/*" # rubocop config/default.yml
    - "vendor/**/*"       # rubocop config/default.yml
    - "db/schema.rb"
    - "db/migrate/*"
    - "bin/*"
    - "spec/rails_helper.rb"
    - "spec/spec_helper.rb"

#################### Layout ################################

# メソッドをグループ分けして書き順を揃えておくと読みやすくなる。
# 多少のツラミはあるかもしれない。
# TODO: Categories を調整することで
# https://github.com/pocke/rubocop-rails-order_model_declarative_methods
# を再現できそう。
Layout/ClassStructure:
  Enabled: true

# メソッドチェーンの改行は末尾に . を入れる
# * REPL に貼り付けた際の暴発を防ぐため
# * 途中にコメントをはさむことができて実用上圧倒的に便利
Layout/DotPosition:
  EnforcedStyle: trailing

# 桁揃えが綺麗にならないことが多いので migration は除外
Layout/ExtraSpacing:
  Exclude:
    - "db/migrate/*.rb"

# special_inside_parentheses (default) と比べて
# * 横に長くなりづらい
# * メソッド名の長さが変わったときに diff が少ない
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

# ({ と hash を開始した場合に ( の位置にインデントさせる
# そもそも {} が必要ない可能性が高いが Style/BracesAroundHashParameters はチェックしないことにしたので
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# private/protected は一段深くインデントする
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# * 警告 120文字
# * 禁止 160文字
# のイメージ
Layout/LineLength:
  Max: 160
  Exclude:
    - "db/migrate/*.rb"

# メソッドチェーン感がより感じられるインデントにする
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented_relative_to_receiver

# {} は 1 行で書くときに主に使われるので、スペースよりも
# 横に長くならない方が嬉しさが多い。
# そもそも {| のスタイルの方が一般的だったと認識している。
Layout/SpaceInsideBlockBraces:
  SpaceBeforeBlockParameters: false

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

#################### Lint ##################################

# spec 内では
# expect { subject }.to change { foo }
# という書き方をよく行うので () を省略したい。
# { foo } は明らかに change に紐付く。
Lint/AmbiguousBlockAssociation:
  Exclude:
    - "spec/**/*_spec.rb"

# Style/EmptyCaseCondition と同じく網羅の表現力が empty when を認めた方が高いし、
# 頻出する対象を最初の when で撥ねるのはパフォーマンス向上で頻出する。
# また、
#   case foo
#   when 42
#     # nop
#   when 1..100
#     ...
#   end
# と、下の when がキャッチしてしまう場合等に対応していない。
# See. http://tech.sideci.com/entry/2016/11/01/105900
Lint/EmptyWhen:
  Enabled: false

# RuntimeError は「特定の Error を定義できない場合」なので、
# 定義できるエラーは RuntimeError ではなく StandardError を継承する。
Lint/InheritException:
  EnforcedStyle: standard_error

# * 同名のメソッドがある場合にローカル変数に `_` を付ける
# * 一時変数として `_` を付ける
# というテクニックは頻出する
Lint/UnderscorePrefixedVariableName:
  Enabled: false

# 子クラスで実装させるつもりで中身が
#   raise NotImplementedError
# のみのメソッドが引っかかるので。
# (raise せずに中身が空だと IgnoreEmptyMethods でセーフ)
Lint/UnusedMethodArgument:
  Enabled: false

# select 以外では引っかからないと思うので
# mutating_methods のチェックを有効に。
# TODO: select は引数が無い (ブロックのみ) の場合にだけチェックする
# ようにすると誤検知がほぼ無くなる？
Lint/Void:
  CheckForMethodsWithNoSideEffects: true

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

#################### Metrics ###############################
Metrics/AbcSize:
  Max: 30

Metrics/BlockLength:
  Exclude:
    - "Rakefile"
    - "**/*.rake"
    - "spec/**/*.rb"
    - "Gemfile"
    - "Guardfile"
    - "config/environments/*.rb"
    - "config/routes.rb"
    - "config/routes/**/*.rb"
    - "*.gemspec"
    - "db/seeds.rb"

Metrics/CyclomaticComplexity:
  Max: 10

Metrics/MethodLength:
  Max: 20
  Exclude:
    - "db/migrate/*.rb"

Metrics/PerceivedComplexity:
  Max: 8

#################### Naming ################################

Naming/PredicateName:
  ForbiddenPrefixes:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

Naming/MethodParameterName:
  Enabled: false

#################### Security ##############################
Security/YAMLLoad:
  Enabled: false

#################### Style #################################
Style/AccessorGrouping:
  Enabled: true

Style/Alias:
  EnforcedStyle: prefer_alias_method

Style/AndOr:
  EnforcedStyle: conditionals

Style/ArrayCoercion:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/BisectedAttrAccessor:
  Enabled: false

Style/BlockDelimiters:
  AutoCorrect: false
  Exclude:
    - "spec/**/*_spec.rb"

Style/CaseLikeIf:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/CollectionMethods:
  PreferredMethods:
    detect: "detect"
    find: "detect"
    inject: "inject"
    reduce: "inject"

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false

Style/EmptyCaseCondition:
  Enabled: false

Style/EmptyElse:
  EnforcedStyle: empty

Style/EmptyMethod:
  EnforcedStyle: expanded

Style/FormatString:
  EnforcedStyle: percent

Style/FrozenStringLiteralComment:
  Enabled: false

Style/GuardClause:
  MinBodyLength: 5

Style/HashAsLastArrayItem:
  Enabled: false

Style/HashLikeCase:
  Enabled: false

Style/HashSyntax:
  Exclude:
    - "**/*.rake"
    - "Rakefile"

Style/IfInsideElse:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

Style/Lambda:
  EnforcedStyle: literal

Style/MethodCalledOnDoEndBlock:
  Enabled: true

Style/MixinUsage:
  Exclude:
    - "bin/setup"
    - "bin/update"
    - "spec/dummy/bin/setup"
    - "spec/dummy/bin/update"

Style/NumericLiterals:
  MinDigits: 7
  Strict: true

Style/NumericPredicate:
  Enabled: false

Style/OrAssignment:
  Enabled: false

Style/PerlBackrefs:
  AutoCorrect: false

Style/PreferredHashMethods:
  EnforcedStyle: verbose

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: false

Style/RedundantFileExtensionInRequire:
  Enabled: false

Style/RedundantReturn:
  AllowMultipleReturnValues: true

Style/RedundantSelf:
  Enabled: false

Style/RescueStandardError:
  EnforcedStyle: implicit

Style/RedundantRegexpCharacterClass:
  Enabled: false

Style/RedundantRegexpEscape:
  Enabled: false

Style/SafeNavigation:
  Enabled: false

Style/Semicolon:
  Exclude:
    - "spec/**/*_spec.rb"

Style/SlicingWithRange:
  Enabled: true

Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

Style/StringMethods:
  Enabled: true

Style/SymbolArray:
  Enabled: false

Style/TernaryParentheses:
  EnforcedStyle: require_parentheses_when_complex

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/WordArray:
  Enabled: false

Style/ZeroLengthPredicate:
  Enabled: false

Style/ExponentialNotation:
  Enabled: true

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true
